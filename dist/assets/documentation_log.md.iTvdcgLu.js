import{_ as t,c as o,o as s,ah as r,bA as n}from"./chunks/framework.0CRElgwM.js";const m=JSON.parse('{"title":"Log","description":"","frontmatter":{"prev":{"text":"Icon","link":"/documentation/#extension"},"next":{"text":"Structure","link":"/documentation/structure"}},"headers":[],"relativePath":"documentation/log.md","filePath":"documentation/log.md","lastUpdated":1758109585000}'),a={name:"documentation/log.md"};function i(d,e,l,c,g,p){return s(),o("div",null,[...e[0]||(e[0]=[r('<h1 id="log" tabindex="-1">Log <a class="header-anchor" href="#log" aria-label="Permalink to ‚ÄúLog‚Äù">‚Äã</a></h1><p>Monitor and debug extension activities through comprehensive logging system that tracks all life-cycle events and operations.</p><p>The Log system provides detailed insights into what&#39;s happening behind the scenes during form filling, data processing, and automation operations.</p><h2 id="from-browser-console" tabindex="-1">üîç From Browser Console <a class="header-anchor" href="#from-browser-console" aria-label="Permalink to ‚Äúüîç From Browser Console‚Äù">‚Äã</a></h2><p>Access real-time log messages directly from your browser&#39;s developer console for immediate debugging and monitoring.</p><img src="'+n+'" alt="Browser Console Log Messages"><h3 id="how-to-open-browser-console" tabindex="-1">üõ†Ô∏è How to Open Browser Console <a class="header-anchor" href="#how-to-open-browser-console" aria-label="Permalink to ‚Äúüõ†Ô∏è How to Open Browser Console‚Äù">‚Äã</a></h3><table tabindex="0"><thead><tr><th>Platform</th><th>Keyboard Shortcut</th><th>Alternative Method</th></tr></thead><tbody><tr><td><strong>Windows/Linux</strong></td><td><code>Shift + Ctrl + J</code></td><td>Press <code>F12</code></td></tr><tr><td><strong>macOS</strong></td><td><code>Option + ‚åò + J</code></td><td>Press <code>F12</code></td></tr><tr><td><strong>All Platforms</strong></td><td>Right-click ‚Üí Inspect Element</td><td>Menu ‚Üí Developer Tools</td></tr></tbody></table><p><strong>Steps to Access Logs:</strong></p><ol><li>Open browser console using any method above</li><li>Navigate to the <strong>Console</strong> tab</li><li>Look for messages prefixed with <code>[EDF]</code> or <code>[Excellent Data Filler]</code></li><li>Filter logs by typing <code>EDF</code> in the console filter</li></ol><h3 id="log-message-types" tabindex="-1">üìä Log Message Types <a class="header-anchor" href="#log-message-types" aria-label="Permalink to ‚Äúüìä Log Message Types‚Äù">‚Äã</a></h3><table tabindex="0"><thead><tr><th>Log Level</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><strong>INFO</strong></td><td>General information about extension operations</td><td><code>[EDF] Extension initialized successfully</code></td></tr><tr><td><strong>WARN</strong></td><td>Warning messages for potential issues</td><td><code>[EDF] Field selector not found, using fallback</code></td></tr><tr><td><strong>ERROR</strong></td><td>Error messages for failed operations</td><td><code>[EDF] Failed to fill field: input[name=&quot;email&quot;]</code></td></tr><tr><td><strong>DEBUG</strong></td><td>Detailed debugging information</td><td><code>[EDF] Processing form field: #username</code></td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">Pro Tip</p><p>Keep the browser console open while using the extension to monitor real-time operations and quickly identify any issues during form filling.</p></div><div class="warning custom-block"><p class="custom-block-title">Note</p><p>Log messages are only visible in the browser console and are not stored permanently. For persistent logging, consider using the extension&#39;s built-in logging features.</p></div>',14)])])}const u=t(a,[["render",i]]);export{m as __pageData,u as default};
