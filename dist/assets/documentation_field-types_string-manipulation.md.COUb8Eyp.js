import{_ as t,c as a,o as n,ah as r,aH as i,al as l}from"./chunks/framework.Dp_r5Pqh.js";const u=JSON.parse('{"title":"🔤 String Manipulation","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/field-types/string-manipulation.md","filePath":"documentation/field-types/string-manipulation.md","lastUpdated":1751799890000}'),o={name:"documentation/field-types/string-manipulation.md"};function s(d,e,c,h,g,p){return n(),a("div",null,[...e[0]||(e[0]=[r('<h1 id="string-manipulation" tabindex="-1">🔤 String Manipulation <a class="header-anchor" href="#string-manipulation" aria-label="Permalink to “🔤 String Manipulation”">​</a></h1><p>If you want to modify the value of any text or any field in the page, then you can use this <strong>String Manipulation</strong> Field Type. This powerful field type allows you to transform, clean, and manipulate text content in various ways.</p><img src="'+i+'" width="400" height="400" alt="String Manipulation"><h2 id="field-options" tabindex="-1">⚙️ Field Options <a class="header-anchor" href="#field-options" aria-label="Permalink to “⚙️ Field Options”">​</a></h2><h3 id="element-selector-query" tabindex="-1">🔍 Element Selector Query <a class="header-anchor" href="#element-selector-query" aria-label="Permalink to “🔍 Element Selector Query”">​</a></h3><p>You can set target element selector query in the field.</p><p>You can find the element selector query by right-clicking on the element and selecting &quot;Copy Element Selector Address&quot; or &quot;Copy Element XPath Selector Address&quot;.</p><h3 id="which-element-option-replace" tabindex="-1">🎯 Which Element Option Replace <a class="header-anchor" href="#which-element-option-replace" aria-label="Permalink to “🎯 Which Element Option Replace”">​</a></h3><p>Choose what type of content you want to replace or modify:</p><table tabindex="0"><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><strong>Element Text</strong></td><td>Replace the visible text content of the element</td></tr><tr><td><strong>Element Value</strong></td><td>Replace the value attribute of input elements</td></tr><tr><td><strong>Element HTML</strong></td><td>Replace the entire HTML markup of the element</td></tr><tr><td><strong>Element Attribute</strong></td><td>Replace a specific attribute value</td></tr><tr><td><strong>Field Name</strong></td><td>Replace content in a specific field by name</td></tr></tbody></table><h4 id="element-attribute" tabindex="-1">Element Attribute <a class="header-anchor" href="#element-attribute" aria-label="Permalink to “Element Attribute”">​</a></h4><ul><li><strong>Element Attribute Name</strong>: Specify which attribute to replace (e.g., <code>src</code>, <code>href</code>, <code>data-id</code>, <code>class</code>)</li></ul><h4 id="field-name" tabindex="-1">Field Name <a class="header-anchor" href="#field-name" aria-label="Permalink to “Field Name”">​</a></h4><ul><li><strong>Field Value</strong>: Enter the name of the field you want to target for replacement</li></ul><h3 id="text-cleaning-options" tabindex="-1">🧹 Text Cleaning Options <a class="header-anchor" href="#text-cleaning-options" aria-label="Permalink to “🧹 Text Cleaning Options”">​</a></h3><table tabindex="0"><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><strong>Remove Extra Space</strong></td><td>Remove multiple consecutive spaces and replace with single space</td></tr><tr><td><strong>Remove All Space</strong></td><td>Remove all spaces from the text</td></tr><tr><td><strong>Remove All String</strong></td><td>Remove all text content (leaves empty string)</td></tr><tr><td><strong>Trim</strong></td><td>Remove leading and trailing whitespace</td></tr></tbody></table><h3 id="case-conversion-options" tabindex="-1">🔤 Case Conversion Options <a class="header-anchor" href="#case-conversion-options" aria-label="Permalink to “🔤 Case Conversion Options”">​</a></h3><table tabindex="0"><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><strong>Convert to Lowercase</strong></td><td>Convert all text to lowercase letters</td></tr><tr><td><strong>Convert to Uppercase</strong></td><td>Convert all text to uppercase letters</td></tr><tr><td><strong>Convert to Title Case</strong></td><td>Convert text to title case (first letter of each word capitalized)</td></tr></tbody></table><h3 id="replace-string-with-regex" tabindex="-1">🔄 Replace String with RegEx <a class="header-anchor" href="#replace-string-with-regex" aria-label="Permalink to “🔄 Replace String with RegEx”">​</a></h3><p>Advanced text replacement using regular expressions.</p><table tabindex="0"><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><strong>Regular Expression</strong></td><td>The regex pattern to match text for replacement</td></tr><tr><td><strong>Replace String</strong></td><td>The text to replace matched patterns with</td></tr></tbody></table><h4 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to “Example Usage”">​</a></h4><p>If you want to change this &quot;<strong>Ben002</strong>&quot; string into this &quot;<strong>002_g.pdf</strong>&quot; then you can use this type of RegEx.</p><img src="'+l+'" width="400" height="400" alt="String Manipulation"><p><strong>Regex Pattern</strong>: <code>Ben(\\d+)</code><br><strong>Replace String</strong>: <code>$1_g.pdf</code><br><strong>Result</strong>: <code>Ben002</code> → <code>002_g.pdf</code></p><h2 id="usage-examples" tabindex="-1">💡 Usage Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to “💡 Usage Examples”">​</a></h2><h3 id="📝-basic-text-replacement" tabindex="-1">📝 Basic Text Replacement <a class="header-anchor" href="#📝-basic-text-replacement" aria-label="Permalink to “📝 Basic Text Replacement”">​</a></h3><ol><li><strong>Which Element Option Replace</strong>: Element Text</li><li><strong>Target</strong>: Select the element containing the text to replace</li><li><strong>New Content</strong>: Enter the replacement text</li><li><strong>Result</strong>: The visible text will be updated</li></ol><h3 id="🔧-attribute-value-replacement" tabindex="-1">🔧 Attribute Value Replacement <a class="header-anchor" href="#🔧-attribute-value-replacement" aria-label="Permalink to “🔧 Attribute Value Replacement”">​</a></h3><ol><li><strong>Which Element Option Replace</strong>: Element Attribute</li><li><strong>Element Attribute Name</strong>: <code>href</code></li><li><strong>New Value</strong>: Enter the new URL</li><li><strong>Result</strong>: The link&#39;s href attribute will be updated</li></ol><h3 id="🧹-text-cleaning" tabindex="-1">🧹 Text Cleaning <a class="header-anchor" href="#🧹-text-cleaning" aria-label="Permalink to “🧹 Text Cleaning”">​</a></h3><ol><li><strong>Remove Extra Space</strong>: ✅ Enabled</li><li><strong>Trim</strong>: ✅ Enabled</li><li><strong>Convert to Title Case</strong>: ✅ Enabled</li><li><strong>Result</strong>: Clean, properly formatted text</li></ol><h3 id="🔄-advanced-regex-replacement" tabindex="-1">🔄 Advanced Regex Replacement <a class="header-anchor" href="#🔄-advanced-regex-replacement" aria-label="Permalink to “🔄 Advanced Regex Replacement”">​</a></h3><ol><li><strong>Replace String with RegEx</strong>: ✅ Enabled</li><li><strong>Regular Expression</strong>: <code>(\\d{4})-(\\d{2})-(\\d{2})</code></li><li><strong>Replace String</strong>: <code>$3/$2/$1</code></li><li><strong>Result</strong>: <code>2024-12-25</code> → <code>25/12/2024</code></li></ol><h2 id="common-use-cases" tabindex="-1">🎯 Common Use Cases <a class="header-anchor" href="#common-use-cases" aria-label="Permalink to “🎯 Common Use Cases”">​</a></h2><h3 id="📊-data-formatting" tabindex="-1">📊 Data Formatting <a class="header-anchor" href="#📊-data-formatting" aria-label="Permalink to “📊 Data Formatting”">​</a></h3><ul><li><strong>Date Format Conversion</strong>: Change date formats using regex</li><li><strong>Number Formatting</strong>: Add commas, currency symbols, or decimal places</li><li><strong>Phone Number Formatting</strong>: Standardize phone number formats</li></ul><h3 id="🧹-content-cleaning" tabindex="-1">🧹 Content Cleaning <a class="header-anchor" href="#🧹-content-cleaning" aria-label="Permalink to “🧹 Content Cleaning”">​</a></h3><ul><li><strong>Remove Extra Whitespace</strong>: Clean up messy text content</li><li><strong>Standardize Case</strong>: Ensure consistent text casing</li><li><strong>Remove Unwanted Characters</strong>: Strip out special characters or symbols</li></ul><h3 id="🔄-dynamic-content-updates" tabindex="-1">🔄 Dynamic Content Updates <a class="header-anchor" href="#🔄-dynamic-content-updates" aria-label="Permalink to “🔄 Dynamic Content Updates”">​</a></h3><ul><li><strong>Update Links</strong>: Change href attributes dynamically</li><li><strong>Modify Form Values</strong>: Update input field values</li><li><strong>Replace Text Content</strong>: Change displayed text based on conditions</li></ul><h2 id="advanced-features" tabindex="-1">🔧 Advanced Features <a class="header-anchor" href="#advanced-features" aria-label="Permalink to “🔧 Advanced Features”">​</a></h2><h3 id="regex-patterns" tabindex="-1">Regex Patterns <a class="header-anchor" href="#regex-patterns" aria-label="Permalink to “Regex Patterns”">​</a></h3><ul><li><strong>Pattern Matching</strong>: Use complex regex patterns for precise text matching</li><li><strong>Capture Groups</strong>: Use <code>$1</code>, <code>$2</code>, etc. to reference captured groups</li><li><strong>Global Replacement</strong>: Replace all occurrences of a pattern</li><li><strong>Case-Insensitive Matching</strong>: Use regex flags for flexible matching</li></ul><h2 id="important-notes" tabindex="-1">⚠️ Important Notes <a class="header-anchor" href="#important-notes" aria-label="Permalink to “⚠️ Important Notes”">​</a></h2><h3 id="element-selection" tabindex="-1">Element Selection <a class="header-anchor" href="#element-selection" aria-label="Permalink to “Element Selection”">​</a></h3><ul><li>Ensure the target element exists before applying string manipulation</li><li>Use appropriate selectors to target the correct element</li></ul><h3 id="regex-safety" tabindex="-1">Regex Safety <a class="header-anchor" href="#regex-safety" aria-label="Permalink to “Regex Safety”">​</a></h3><ul><li>Always test regex patterns with sample data first</li><li>Be careful with greedy patterns that might match too much text</li><li>Use escape characters for special regex characters</li></ul>',49)])])}const b=t(o,[["render",s]]);export{u as __pageData,b as default};
