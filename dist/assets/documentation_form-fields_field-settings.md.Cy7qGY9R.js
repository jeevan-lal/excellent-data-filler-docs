import{_ as i,c as t,o as s,ah as n,aR as a,aS as l,aT as o,aU as r,aV as d,aW as c,aX as g,aY as h,aZ as p,a_ as u,a$ as f,b0 as m,b1 as b,b2 as v}from"./chunks/framework.Dp_r5Pqh.js";const T=JSON.parse('{"title":"Field Settings","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/form-fields/field-settings.md","filePath":"documentation/form-fields/field-settings.md","lastUpdated":1751799890000}'),k={name:"documentation/form-fields/field-settings.md"};function y(x,e,S,E,C,P){return s(),t("div",null,[...e[0]||(e[0]=[n('<h1 id="field-settings" tabindex="-1">Field Settings <a class="header-anchor" href="#field-settings" aria-label="Permalink to “Field Settings”">​</a></h1><p>Field Settings provide comprehensive configuration options for individual form fields. When you <strong>edit</strong> a field, a sidebar opens containing all the available settings for that specific field. Some settings are specific to particular <a href="/documentation/form-fields/field-types.html">field types</a>, while others are universal across all field types.</p><img src="'+a+'" width="500" height="500" alt="Field Settings"><h2 id="basic-field-settings" tabindex="-1">Basic Field Settings <a class="header-anchor" href="#basic-field-settings" aria-label="Permalink to “Basic Field Settings”">​</a></h2><h3 id="⌨️-fill-the-values-like-a-typing-tutor" tabindex="-1">⌨️ Fill the values like a typing tutor <a class="header-anchor" href="#⌨️-fill-the-values-like-a-typing-tutor" aria-label="Permalink to “⌨️ Fill the values like a typing tutor”">​</a></h3><p>This setting enables <strong>human-like typing</strong> behavior in input fields, simulating a typing tutor with configurable typing speed.</p><p><strong>Features:</strong></p><ul><li><strong>Realistic Typing</strong> - Mimics human typing patterns</li><li><strong>Speed Control</strong> - Adjustable typing speed (slow, medium, fast)</li><li><strong>Character-by-Character</strong> - Types each character individually</li><li><strong>Natural Delays</strong> - Includes realistic pauses between keystrokes</li></ul><p><strong>Use Cases:</strong></p><ul><li>Bypassing anti-bot detection</li><li>Creating more natural form interactions</li><li>Testing form validation with realistic input timing</li></ul><h3 id="🧹-before-filling-the-value-in-the-field-clear-the-value-of-the-field" tabindex="-1">🧹 Before filling the value in the field, clear the value of the field <a class="header-anchor" href="#🧹-before-filling-the-value-in-the-field-clear-the-value-of-the-field" aria-label="Permalink to “🧹 Before filling the value in the field, clear the value of the field”">​</a></h3><p>Automatically clears existing field values before entering new data.</p><p><strong>Purpose:</strong></p><ul><li><strong>Clean Slate</strong> - Ensures no residual data remains</li><li><strong>Data Integrity</strong> - Prevents mixing old and new values</li><li><strong>Consistent Results</strong> - Guarantees clean data entry</li></ul><h3 id="🎯-if-excel-column-value-is-empty-then-fill-this-default-value" tabindex="-1">🎯 If excel column value is empty then fill this default value <a class="header-anchor" href="#🎯-if-excel-column-value-is-empty-then-fill-this-default-value" aria-label="Permalink to “🎯 If excel column value is empty then fill this default value”">​</a></h3><p>Sets a fallback value when the Excel column is empty or missing data.</p><p><strong>Configuration:</strong></p><ul><li><strong>Default Value</strong> - Specify the fallback value</li><li><strong>Visual Indicator</strong> - Green edit button = default value set, Yellow = no default</li><li><strong>Site-wide Override</strong> - Can be disabled globally in Site Settings</li></ul><p><strong>Visual Indicators:</strong></p><ul><li>🟢 <strong>Green Edit Button</strong> - Default value is configured</li><li>🟡 <strong>Yellow Edit Button</strong> - No default value set</li></ul><img src="'+l+'" width="" height="" alt="Field Default Value"><p><strong>Removing Default Values:</strong></p><ol><li><strong>Individual Field</strong> - Edit the field and disable default settings</li><li><strong>Site-wide</strong> - Enable <code>Ignore field default value</code> in Site Settings</li></ol><img src="'+o+'" width="400" height="400" alt="Site Settings"><h3 id="🔗-take-the-value-of-this-field-from-another-excel-column" tabindex="-1">🔗 Take the value of this field from another excel column <a class="header-anchor" href="#🔗-take-the-value-of-this-field-from-another-excel-column" aria-label="Permalink to “🔗 Take the value of this field from another excel column”">​</a></h3><p>Links field values to other Excel columns, eliminating data duplication.</p><p><strong>Benefits:</strong></p><ul><li><strong>Data Consistency</strong> - Single source of truth for shared values</li><li><strong>Reduced Redundancy</strong> - No need to duplicate data in Excel</li><li><strong>Easier Maintenance</strong> - Update once, applies everywhere</li></ul><p><strong>Example:</strong> If both &quot;First Name&quot; and &quot;Full Name&quot; fields need the same value, create one Excel column and reference it in both fields.</p><h2 id="data-processing-settings" tabindex="-1">Data Processing Settings <a class="header-anchor" href="#data-processing-settings" aria-label="Permalink to “Data Processing Settings”">​</a></h2><h3 id="🔄-replace-the-field-value-according-to-the-custom-values" tabindex="-1">🔄 Replace the field value according to the custom values <a class="header-anchor" href="#🔄-replace-the-field-value-according-to-the-custom-values" aria-label="Permalink to “🔄 Replace the field value according to the custom values”">​</a></h3><p>Transforms field values using custom mapping rules.</p><p><strong>Configuration:</strong></p><ul><li><strong>Field Value</strong> - Original value from Excel</li><li><strong>Custom Value</strong> - Replacement value to use</li><li><strong>Multiple Mappings</strong> - Support for multiple value transformations</li></ul><p><strong>Example Mapping:</strong></p><ul><li><code>&quot;Yes/Y&quot;</code> → <code>&quot;0&quot;</code></li><li><code>&quot;No/N&quot;</code> → <code>&quot;1&quot;</code></li></ul><img src="'+r+'" width="400" height="400" alt="Replace Field Value"><p><strong>Excel Template Integration:</strong> Custom values appear in the <code>Field Custom Values</code> column in the <code>HELPING</code> sheet of the Excel template.</p><img src="'+d+'" width="600" height="600" alt="Field Custom Values"><h3 id="📋-paste-copied-value" tabindex="-1">📋 Paste Copied Value <a class="header-anchor" href="#📋-paste-copied-value" aria-label="Permalink to “📋 Paste Copied Value”">​</a></h3><p>Pastes values copied using the <a href="/documentation/field-types/copy.html">Copy Field Type</a>.</p><p><strong>Prerequisites:</strong></p><ul><li>Must use Copy Field Type first</li><li>Text modification options available before pasting</li></ul><p><strong>Modification Options:</strong></p><ul><li><strong>Text Transformations</strong> - Case changes, trimming, formatting</li><li><strong>Custom Processing</strong> - Apply custom text modifications</li><li><strong>Validation</strong> - Ensure copied data meets requirements</li></ul><img src="'+c+'" width="500" height="500" alt="Paste Settings"><h2 id="element-detection-settings" tabindex="-1">Element Detection Settings <a class="header-anchor" href="#element-detection-settings" aria-label="Permalink to “Element Detection Settings”">​</a></h2><h3 id="🔍-wait-until-element-is-found-in-the-page" tabindex="-1">🔍 Wait until element is found in the page <a class="header-anchor" href="#🔍-wait-until-element-is-found-in-the-page" aria-label="Permalink to “🔍 Wait until element is found in the page”">​</a></h3><p>Prevents field action execution until the target element is located on the page.</p><p><strong>Use Cases:</strong></p><ul><li><strong>Dynamic Content</strong> - Wait for AJAX-loaded elements</li><li><strong>Page Transitions</strong> - Ensure elements are present before interaction</li><li><strong>Reliability</strong> - Prevents errors from missing elements</li></ul><h3 id="👁️-wait-until-element-is-visible-in-the-page" tabindex="-1">👁️ Wait until element is visible in the page <a class="header-anchor" href="#👁️-wait-until-element-is-visible-in-the-page" aria-label="Permalink to “👁️ Wait until element is visible in the page”">​</a></h3><p>Waits for elements to be both found and visible before proceeding.</p><p><strong>Enhanced Detection:</strong></p><ul><li><strong>Element Exists</strong> - Element is present in DOM</li><li><strong>Element Visible</strong> - Element is actually visible to users</li><li><strong>Interaction Ready</strong> - Element is ready for user interaction</li></ul><h2 id="javascript-event-settings" tabindex="-1">JavaScript Event Settings <a class="header-anchor" href="#javascript-event-settings" aria-label="Permalink to “JavaScript Event Settings”">​</a></h2><h3 id="⚡-trigger-javascript-event" tabindex="-1">⚡ Trigger Javascript Event <a class="header-anchor" href="#⚡-trigger-javascript-event" aria-label="Permalink to “⚡ Trigger Javascript Event”">​</a></h3><p>Executes JavaScript events when keyboard or mouse actions occur.</p><p><strong>Supported Events:</strong></p><ul><li><strong>Keyboard Events</strong> - keydown, keyup, keypress</li><li><strong>Mouse Events</strong> - click, mousedown, mouseup</li><li><strong>Form Events</strong> - focus, blur, change, submit</li></ul><p><strong>Configuration:</strong></p><ul><li><strong>Event Type</strong> - Select specific JavaScript event</li><li><strong>Element Targeting</strong> - Apply to specific elements</li><li><strong>Event Parameters</strong> - Customize event properties</li></ul><img src="'+g+'" width="500" height="500" alt="JavaScript Events"><h3 id="🖱️-trigger-javascript-mouse-event" tabindex="-1">🖱️ Trigger Javascript Mouse Event <a class="header-anchor" href="#🖱️-trigger-javascript-mouse-event" aria-label="Permalink to “🖱️ Trigger Javascript Mouse Event”">​</a></h3><p>Specialized mouse event triggering for enhanced interaction simulation.</p><p><strong>Mouse Events:</strong></p><ul><li><strong>Click Events</strong> - Single, double, right-click</li><li><strong>Hover Events</strong> - Mouse enter, leave, over</li><li><strong>Drag Events</strong> - Drag start, drag end, drop</li></ul><img src="'+h+'" width="500" height="500" alt="Mouse Events"><h2 id="conditional-logic-settings" tabindex="-1">Conditional Logic Settings <a class="header-anchor" href="#conditional-logic-settings" aria-label="Permalink to “Conditional Logic Settings”">​</a></h2><h3 id="⏭️-skip-field-action-if-any-condition-is-true" tabindex="-1">⏭️ Skip field action if any condition is true <a class="header-anchor" href="#⏭️-skip-field-action-if-any-condition-is-true" aria-label="Permalink to “⏭️ Skip field action if any condition is true”">​</a></h3><p>Skips field execution when specified conditions are met.</p><p><strong>Condition Types:</strong></p><ul><li><strong>Element Visibility</strong> - Skip if element is visible/not visible</li><li><strong>Element Existence</strong> - Skip if element exists/doesn&#39;t exist</li><li><strong>Value Matching</strong> - Skip based on element values</li><li><strong>Text Matching</strong> - Skip based on element text content</li><li><strong>Attribute Matching</strong> - Skip based on element attributes</li><li><strong>HTML Matching</strong> - Skip based on element HTML content</li><li><strong>Image Matching</strong> - Skip based on image file names</li></ul><img src="'+p+'" width="500" height="500" alt="Skip Conditions"><h3 id="🔄-wait-until-the-response-status-of-the-given-element-change-fields-comes" tabindex="-1">🔄 Wait until the response status of the given element change fields comes <a class="header-anchor" href="#🔄-wait-until-the-response-status-of-the-given-element-change-fields-comes" aria-label="Permalink to “🔄 Wait until the response status of the given element change fields comes”">​</a></h3><p>Waits for <a href="/documentation/field-types/element-change.html">Element Change</a> field status before proceeding.</p><p><strong>Configuration:</strong></p><ul><li><strong>Field Reference</strong> - Specify Element Change field name</li><li><strong>Status Check</strong> - Before Field or After Field status</li><li><strong>Conditional Proceeding</strong> - Only proceeds when status is true</li></ul><img src="'+u+'" alt="Element Change Wait"><h3 id="📡-wait-until-the-response-status-of-the-given-request-monitor-fields-comes" tabindex="-1">📡 Wait until the response status of the given request monitor fields comes <a class="header-anchor" href="#📡-wait-until-the-response-status-of-the-given-request-monitor-fields-comes" aria-label="Permalink to “📡 Wait until the response status of the given request monitor fields comes”">​</a></h3><p>Waits for <a href="/documentation/field-types/request-monitor.html">Request Monitor</a> field status before proceeding.</p><p><strong>Use Cases:</strong></p><ul><li><strong>API Responses</strong> - Wait for server responses</li><li><strong>Network Requests</strong> - Monitor HTTP request completion</li><li><strong>Data Loading</strong> - Ensure data is fully loaded</li></ul><img src="'+f+'" alt="Request Monitor Wait"><h3 id="✅-if-element-value-matches-then-fill-the-value-otherwise-skip-the-field" tabindex="-1">✅ If element value matches then fill the value otherwise skip the field <a class="header-anchor" href="#✅-if-element-value-matches-then-fill-the-value-otherwise-skip-the-field" aria-label="Permalink to “✅ If element value matches then fill the value otherwise skip the field”">​</a></h3><p>Conditional field execution based on element value matching.</p><p><strong>Logic:</strong></p><ul><li><strong>Value Match</strong> - Execute field action if values match</li><li><strong>Value Mismatch</strong> - Skip field if values don&#39;t match</li><li><strong>Empty Value Check</strong> - Use <code>&#39;&#39;</code> to check for empty values</li></ul><img src="'+m+'" width="500" height="500" alt="Value Matching"><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>To check for empty values, use <code>&#39;&#39;</code> (empty string) in the configuration.</p></div><h3 id="🚫-skip-field-action-if-condition-is-true" tabindex="-1">🚫 Skip field action if condition is true <a class="header-anchor" href="#🚫-skip-field-action-if-condition-is-true" aria-label="Permalink to “🚫 Skip field action if condition is true”">​</a></h3><p>Advanced conditional skipping with multiple condition types.</p><p><strong>Available Conditions:</strong></p><ul><li><strong>Element Visible</strong> - Skip if element is visible</li><li><strong>Element Not Visible</strong> - Skip if element is hidden</li><li><strong>Element Exists</strong> - Skip if element exists in DOM</li><li><strong>Element Not Exists</strong> - Skip if element is missing</li><li><strong>Element Value Matched</strong> - Skip if element value matches</li><li><strong>Element Text Matched</strong> - Skip if element text matches</li><li><strong>Element Attribute Matched</strong> - Skip if element attribute matches</li><li><strong>Element HTML Matched</strong> - Skip if element HTML matches</li><li><strong>Image File Name Matched</strong> - Skip if image filename matches</li></ul><img src="'+b+'" width="500" height="500" alt="Advanced Skip Conditions"><h3 id="🔍-skip-field-action-if-given-field-value-matches" tabindex="-1">🔍 Skip field action if given field value matches <a class="header-anchor" href="#🔍-skip-field-action-if-given-field-value-matches" aria-label="Permalink to “🔍 Skip field action if given field value matches”">​</a></h3><p>Skips field execution when specific field values are present.</p><p><strong>Configuration:</strong></p><ul><li><strong>Field Reference</strong> - Specify which field to check</li><li><strong>Value List</strong> - Values that trigger skipping</li><li><strong>Empty Value Handling</strong> - Use <code>&#39;&#39;</code> for blank/empty values</li></ul><p><strong>Example:</strong> Skip field if &quot;Does the Beneficiary have Aadhaar Card?&quot; is &quot;No/N&quot;</p><img src="'+v+`" width="500" height="500" alt="Field Value Skip"><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>Use <code>&#39;&#39;</code> to represent blank/empty values in the configuration.</p></div><h2 id="field-validation-settings" tabindex="-1">Field Validation Settings <a class="header-anchor" href="#field-validation-settings" aria-label="Permalink to “Field Validation Settings”">​</a></h2><h3 id="⭐-is-this-field-required" tabindex="-1">⭐ Is this field Required <a class="header-anchor" href="#⭐-is-this-field-required" aria-label="Permalink to “⭐ Is this field Required”">​</a></h3><p>Marks field as mandatory for form submission.</p><p><strong>Integration with Public Keys:</strong></p><ul><li><strong>{FORM-FILLED} Key</strong> - Only checks required fields</li><li><strong>Form Submission</strong> - Prevents submission if required fields are empty</li><li><strong>Validation Logic</strong> - Ensures all required fields are completed</li></ul><h2 id="response-action-settings" tabindex="-1">Response Action Settings <a class="header-anchor" href="#response-action-settings" aria-label="Permalink to “Response Action Settings”">​</a></h2><h3 id="✅-field-success-response-action" tabindex="-1">✅ Field Success Response Action <a class="header-anchor" href="#✅-field-success-response-action" aria-label="Permalink to “✅ Field Success Response Action”">​</a></h3><p>Executes specific actions when field operation succeeds.</p><p><strong>Configuration:</strong></p><ul><li><strong>Action Selection</strong> - Choose from available response actions</li><li><strong>Success Handling</strong> - Define behavior on successful completion</li><li><strong>Workflow Control</strong> - Control automation flow based on success</li></ul><p><a href="/documentation/form-fields/field-response-action.html#field-success-response-action">Field Response Action</a></p><h3 id="❌-field-error-response-action" tabindex="-1">❌ Field Error Response Action <a class="header-anchor" href="#❌-field-error-response-action" aria-label="Permalink to “❌ Field Error Response Action”">​</a></h3><p>Handles field operation failures with custom actions.</p><p><strong>Error Management:</strong></p><ul><li><strong>Error Handling</strong> - Define behavior on field failure</li><li><strong>Recovery Actions</strong> - Attempt recovery or alternative actions</li><li><strong>Logging</strong> - Record error details for debugging</li></ul><p><a href="/documentation/form-fields/field-response-action.html#field-error-response-action">Field Response Action</a></p><h3 id="⏭️-field-skip-response-action" tabindex="-1">⏭️ Field Skip Response Action <a class="header-anchor" href="#⏭️-field-skip-response-action" aria-label="Permalink to “⏭️ Field Skip Response Action”">​</a></h3><p>Manages field skipping scenarios with appropriate actions.</p><p><strong>Skip Handling:</strong></p><ul><li><strong>Skip Logic</strong> - Define behavior when field is skipped</li><li><strong>Workflow Continuation</strong> - Ensure automation continues smoothly</li><li><strong>Skip Tracking</strong> - Monitor and log skipped fields</li></ul><p><a href="/documentation/form-fields/field-response-action.html#field-skip-response-action">Field Skip Action</a></p><h2 id="automation-control-settings" tabindex="-1">Automation Control Settings <a class="header-anchor" href="#automation-control-settings" aria-label="Permalink to “Automation Control Settings”">​</a></h2><h3 id="🛑-if-error-response-is-coming-in-the-field-then-stop-filler" tabindex="-1">🛑 If error response is coming in the field then stop filler <a class="header-anchor" href="#🛑-if-error-response-is-coming-in-the-field-then-stop-filler" aria-label="Permalink to “🛑 If error response is coming in the field then stop filler”">​</a></h3><p>Halts the entire automation process when field errors occur.</p><p><strong>Use Cases:</strong></p><ul><li><strong>Critical Fields</strong> - Stop on essential field failures</li><li><strong>Error Prevention</strong> - Prevent cascading errors</li><li><strong>Manual Intervention</strong> - Allow manual error resolution</li></ul><h3 id="✅-if-success-response-is-coming-in-the-field-then-stop-filler" tabindex="-1">✅ If success response is coming in the field then stop filler <a class="header-anchor" href="#✅-if-success-response-is-coming-in-the-field-then-stop-filler" aria-label="Permalink to “✅ If success response is coming in the field then stop filler”">​</a></h3><p>Stops automation after successful field completion.</p><p><strong>Scenarios:</strong></p><ul><li><strong>Single Operation</strong> - Complete one task and stop</li><li><strong>Conditional Completion</strong> - Stop based on specific success criteria</li><li><strong>Workflow Control</strong> - Manage automation flow</li></ul><h2 id="advanced-settings" tabindex="-1">Advanced Settings <a class="header-anchor" href="#advanced-settings" aria-label="Permalink to “Advanced Settings”">​</a></h2><h3 id="🔍-search-strings-and-execute-field-action" tabindex="-1">🔍 Search Strings and Execute Field Action <a class="header-anchor" href="#🔍-search-strings-and-execute-field-action" aria-label="Permalink to “🔍 Search Strings and Execute Field Action”">​</a></h3><p>Executes field actions based on text search results.</p><p><strong>Functionality:</strong></p><ul><li><strong>Text Search</strong> - Search for specific strings on the page</li><li><strong>Conditional Execution</strong> - Execute actions based on search results</li><li><strong>Pattern Matching</strong> - Use regex or exact matching</li></ul><h3 id="📊-execute-action-on-fields-like-row-type" tabindex="-1">📊 Execute Action on fields like Row Type <a class="header-anchor" href="#📊-execute-action-on-fields-like-row-type" aria-label="Permalink to “📊 Execute Action on fields like Row Type”">​</a></h3><p>Applies actions to multiple fields of the same type.</p><p><strong>Benefits:</strong></p><ul><li><strong>Bulk Operations</strong> - Apply settings to multiple similar fields</li><li><strong>Consistency</strong> - Ensure uniform behavior across field types</li><li><strong>Efficiency</strong> - Reduce configuration time</li></ul><h3 id="🔄-if-this-field-is-being-used-in-a-loop-and-the-field-has-multiple-elements" tabindex="-1">🔄 If this field is being used in a loop and the field has multiple elements <a class="header-anchor" href="#🔄-if-this-field-is-being-used-in-a-loop-and-the-field-has-multiple-elements" aria-label="Permalink to “🔄 If this field is being used in a loop and the field has multiple elements”">​</a></h3><p>Handles multiple elements in loop scenarios using index-based selection.</p><p><strong>Loop Integration:</strong></p><ul><li><strong>Index Selection</strong> - Select specific element by loop index</li><li><strong>Multiple Elements</strong> - Handle multiple matching elements</li><li><strong>Loop Context</strong> - Work within loop iteration context</li></ul><h3 id="🎨-do-not-fill-the-status-color-element-of-this-field" tabindex="-1">🎨 Do not fill the Status Color, element of this field <a class="header-anchor" href="#🎨-do-not-fill-the-status-color-element-of-this-field" aria-label="Permalink to “🎨 Do not fill the Status Color, element of this field”">​</a></h3><p>Excludes field from status color updates.</p><p><strong>Purpose:</strong></p><ul><li><strong>Visual Control</strong> - Prevent status color changes</li><li><strong>Custom Styling</strong> - Maintain custom element appearance</li><li><strong>UI Consistency</strong> - Keep specific elements unchanged</li></ul><h3 id="📋-ignore-this-field-details-in-the-excel-template" tabindex="-1">📋 Ignore this field details in the Excel Template <a class="header-anchor" href="#📋-ignore-this-field-details-in-the-excel-template" aria-label="Permalink to “📋 Ignore this field details in the Excel Template”">​</a></h3><p>Excludes field from Excel template generation.</p><p><strong>Use Cases:</strong></p><ul><li><strong>Internal Fields</strong> - Hide fields not needed in Excel</li><li><strong>Temporary Fields</strong> - Exclude test or temporary fields</li><li><strong>Template Cleanup</strong> - Keep templates focused on essential data</li></ul><h2 id="timing-settings" tabindex="-1">Timing Settings <a class="header-anchor" href="#timing-settings" aria-label="Permalink to “Timing Settings”">​</a></h2><h3 id="⏱️-delay-time-before-this-field-is-run" tabindex="-1">⏱️ Delay Time Before this field is Run <a class="header-anchor" href="#⏱️-delay-time-before-this-field-is-run" aria-label="Permalink to “⏱️ Delay Time Before this field is Run”">​</a></h3><p>Adds delay before field execution (in milliseconds).</p><p><strong>Configuration:</strong></p><ul><li><strong>Fixed Delay</strong> - Set specific delay time</li><li><strong>Random Delay</strong> - Use random delay for natural behavior</li><li><strong>Variable Delay</strong> - Use variables for dynamic timing</li></ul><p><strong>Random Delay Example:</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>// Random delay between 1-2 seconds</span></span>
<span class="line"><span>{{random.integer[1000][2000]}}</span></span></code></pre></div><h3 id="⏱️-delay-time-after-this-field-is-run" tabindex="-1">⏱️ Delay Time After this field is Run <a class="header-anchor" href="#⏱️-delay-time-after-this-field-is-run" aria-label="Permalink to “⏱️ Delay Time After this field is Run”">​</a></h3><p>Adds delay after field execution (in milliseconds).</p><p><strong>Benefits:</strong></p><ul><li><strong>Page Loading</strong> - Allow time for page updates</li><li><strong>Animation Completion</strong> - Wait for UI animations</li><li><strong>Natural Behavior</strong> - Simulate human-like pauses</li></ul><p><strong>Random Delay Example:</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>// Random delay between 1-2 seconds</span></span>
<span class="line"><span>{{random.integer[1000][2000]}}</span></span></code></pre></div><h2 id="specialized-settings" tabindex="-1">Specialized Settings <a class="header-anchor" href="#specialized-settings" aria-label="Permalink to “Specialized Settings”">​</a></h2><h3 id="🚫-if-form-is-aspx-then-remove-input-behavior" tabindex="-1">🚫 If Form is ASPX then Remove Input Behavior <a class="header-anchor" href="#🚫-if-form-is-aspx-then-remove-input-behavior" aria-label="Permalink to “🚫 If Form is ASPX then Remove Input Behavior”">​</a></h3><p>Removes element behavior in ASPX forms for compatibility.</p><p><strong>Purpose:</strong></p><ul><li><strong>ASPX Compatibility</strong> - Handle ASP.NET form behaviors</li><li><strong>Element Control</strong> - Override default form behaviors</li><li><strong>Cross-Platform</strong> - Ensure consistent behavior across form types</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to “Best Practices”">​</a></h2><h3 id="🎯-configuration-tips" tabindex="-1">🎯 Configuration Tips <a class="header-anchor" href="#🎯-configuration-tips" aria-label="Permalink to “🎯 Configuration Tips”">​</a></h3><ol><li><strong>Test Settings</strong> - Always test field settings with sample data</li><li><strong>Use Defaults Wisely</strong> - Set appropriate default values for reliability</li><li><strong>Conditional Logic</strong> - Use skip conditions to handle edge cases</li><li><strong>Timing Considerations</strong> - Add appropriate delays for dynamic content</li><li><strong>Error Handling</strong> - Configure proper error response actions</li></ol><h3 id="🔧-troubleshooting" tabindex="-1">🔧 Troubleshooting <a class="header-anchor" href="#🔧-troubleshooting" aria-label="Permalink to “🔧 Troubleshooting”">​</a></h3><ol><li><strong>Element Detection</strong> - Use wait settings for dynamic content</li><li><strong>Value Matching</strong> - Check exact value formats in conditions</li><li><strong>Timing Issues</strong> - Adjust delay settings for slow-loading content</li><li><strong>Error Responses</strong> - Monitor field response actions for debugging</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to “Next Steps”">​</a></h2><ul><li><a href="/documentation/form-fields/field-types.html">Field Types</a> - Learn about different field types</li><li><a href="/documentation/form-fields/field-response-action.html">Field Response Actions</a> - Configure response behaviors</li><li><a href="/documentation/variable.html">Variables</a> - Use variables in field settings</li><li><a href="/documentation/site/site-settings.html">Site Settings</a> - Configure site-wide settings</li></ul>`,178)])])}const A=i(k,[["render",y]]);export{T as __pageData,A as default};
