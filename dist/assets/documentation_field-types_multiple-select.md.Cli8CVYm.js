import{_ as t,c as o,o as i,ah as a}from"./chunks/framework.0CRElgwM.js";const u=JSON.parse('{"title":"Multiple Select Field","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/field-types/multiple-select.md","filePath":"documentation/field-types/multiple-select.md","lastUpdated":1760012557000}'),l={name:"documentation/field-types/multiple-select.md"};function n(r,e,s,d,c,h){return i(),o("div",null,[...e[0]||(e[0]=[a('<h1 id="multiple-select-field" tabindex="-1">Multiple Select Field <a class="header-anchor" href="#multiple-select-field" aria-label="Permalink to ‚ÄúMultiple Select Field‚Äù">‚Äã</a></h1><p>Multiple Select fields are used for dropdown menus where users can choose one or more options from a list of available choices. They provide extensive configuration options for optimal multi-selection behavior, especially when dealing with data from external sources like Excel.</p><h2 id="basic-configuration" tabindex="-1">Basic Configuration <a class="header-anchor" href="#basic-configuration" aria-label="Permalink to ‚ÄúBasic Configuration‚Äù">‚Äã</a></h2><h3 id="field-properties" tabindex="-1">Field Properties <a class="header-anchor" href="#field-properties" aria-label="Permalink to ‚ÄúField Properties‚Äù">‚Äã</a></h3><table tabindex="0"><thead><tr><th>Property</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><strong>Field Name</strong></td><td>Unique identifier for the field</td><td><code>hobbies</code>, <code>skills</code>, <code>favoriteColors</code></td></tr><tr><td><strong>Field Type</strong></td><td>Set to <strong>Multiple Select</strong> for multi-choice dropdowns</td><td><code>Multiple Select</code></td></tr><tr><td><strong>Field Selector Type</strong></td><td>Method to locate the field element</td><td><code>Selector</code>, <code>Id</code>, <code>XPath</code></td></tr><tr><td><strong>Field Selector Query</strong></td><td>Unique address to locate the field</td><td><code>select[name=&quot;hobbies&quot;]</code>, <code>#skills</code></td></tr><tr><td><strong>Field Value</strong></td><td>Data source for field content (e.g., Excel column)</td><td>Excel column or default value</td></tr></tbody></table><h2 id="multiple-select-field-settings" tabindex="-1">Multiple Select Field Settings <a class="header-anchor" href="#multiple-select-field-settings" aria-label="Permalink to ‚ÄúMultiple Select Field Settings‚Äù">‚Äã</a></h2><h3 id="option-matching-configuration" tabindex="-1">‚öôÔ∏è Option Matching Configuration <a class="header-anchor" href="#option-matching-configuration" aria-label="Permalink to ‚Äú‚öôÔ∏è Option Matching Configuration‚Äù">‚Äã</a></h3><p>These settings control how the values provided (e.g., from your Excel sheet) are matched against the available options in the multiple-select dropdown.</p><h4 id="match-options-as" tabindex="-1">Match options as <a class="header-anchor" href="#match-options-as" aria-label="Permalink to ‚ÄúMatch options as‚Äù">‚Äã</a></h4><p>This dropdown defines the strategy for matching the input value to the options within the select element.</p><p><strong>Available Matching Strategies:</strong></p><ul><li><p><strong>Through Name/Value (Default)</strong>: The extension will attempt to match the input value against both the visible text (name) of each option and its underlying <code>value</code> attribute. This provides flexibility in matching, as some dropdowns use descriptive text while others rely on specific values.</p></li><li><p><strong>Equal to Name</strong>: The provided value must exactly match the visible text (name) of an <code>&lt;option&gt;</code> element. This is useful when you want to match based on the displayed text only.</p></li><li><p><strong>Search Name in Any Position</strong>: The system will search for the provided value as a substring within the visible text (name) of any <code>&lt;option&gt;</code> element. A partial match anywhere in the name will be considered valid.</p></li><li><p><strong>Match Name from Start-End Position</strong>: The provided value must match a substring of the visible text (name) of an <code>&lt;option&gt;</code> element, either starting from the beginning of the name or ending at the end of the name.</p></li><li><p><strong>Equal to Value</strong>: The provided value must exactly match the <code>value</code> attribute of an <code>&lt;option&gt;</code> element. This is useful when you want to match based on the underlying value only.</p></li><li><p><strong>Through Option Serial Number</strong>: This option allows selecting an item based on its numerical position (index) in the dropdown list. For example, <code>1</code> would select the first option, <code>2</code> the second, and so on.</p></li></ul><h4 id="separator-to-split-value" tabindex="-1">Separator to Split Value <a class="header-anchor" href="#separator-to-split-value" aria-label="Permalink to ‚ÄúSeparator to Split Value‚Äù">‚Äã</a></h4><p>When providing multiple values for a multi-select field (e.g., from a single Excel cell), this character is used to split the string into individual values.</p><ul><li><strong>Default Value</strong>: <code>&quot;</code> (double quote)</li><li><strong>Usage</strong>: If your Excel cell contains <code>&quot;Option1&quot; &quot;Option2&quot;</code>, the extension will split this into &quot;Option1&quot; and &quot;Option2&quot; using the double quote as a separator, and then attempt to select both.</li></ul><h4 id="wait-until-max-options-in-the-dropdown-element" tabindex="-1">Wait until max options in the dropdown element <a class="header-anchor" href="#wait-until-max-options-in-the-dropdown-element" aria-label="Permalink to ‚ÄúWait until max options in the dropdown element‚Äù">‚Äã</a></h4><p>This toggle controls whether the extension should wait for a minimum number of options to be loaded in the dropdown before attempting to make selections. This is useful for dynamically loaded dropdowns.</p><ul><li><p><strong>Enabled</strong>: The extension will wait until at least the specified number of options are present.</p></li><li><p><strong>Disabled</strong>: The extension will attempt to select options immediately without waiting.</p></li><li><p><strong>Input Field (Default: 2)</strong>: Specifies the minimum number of options to wait for. For example, if set to <code>2</code>, the extension will wait until at least two options are available in the dropdown.</p></li></ul><h3 id="text-normalization-for-matching" tabindex="-1">üìù Text Normalization for Matching <a class="header-anchor" href="#text-normalization-for-matching" aria-label="Permalink to ‚Äúüìù Text Normalization for Matching‚Äù">‚Äã</a></h3><p>These settings help standardize the text used for matching, improving the reliability of selections.</p><h4 id="convert-the-text-into-lowercase-letters-and-then-match-the-text" tabindex="-1">Convert the text into lowercase letters and then match the text <a class="header-anchor" href="#convert-the-text-into-lowercase-letters-and-then-match-the-text" aria-label="Permalink to ‚ÄúConvert the text into lowercase letters and then match the text‚Äù">‚Äã</a></h4><p>This toggle ensures that both the input value (from Excel) and the dropdown option text are converted to lowercase before comparison.</p><ul><li><strong>Enabled</strong>: Enables case-insensitive matching. For example, &quot;Apple&quot; will match &quot;apple&quot;. (Recommended for robust matching)</li><li><strong>Disabled</strong>: Matching will be case-sensitive.</li></ul><h4 id="remove-extra-space-from-option-text-then-match-the-text" tabindex="-1">Remove extra space from option text then match the text <a class="header-anchor" href="#remove-extra-space-from-option-text-then-match-the-text" aria-label="Permalink to ‚ÄúRemove extra space from option text then match the text‚Äù">‚Äã</a></h4><p>This toggle removes leading and trailing whitespace from both the input value and the dropdown option text before matching.</p><ul><li><strong>Enabled</strong>: Trims whitespace. For example, &quot; Option1 &quot; will match &quot;Option1&quot;. (Recommended for robust matching)</li><li><strong>Disabled</strong>: Whitespace will be considered during matching.</li></ul><h4 id="remove-all-space-from-option-text-then-match-the-text" tabindex="-1">Remove all space from option text then match the text <a class="header-anchor" href="#remove-all-space-from-option-text-then-match-the-text" aria-label="Permalink to ‚ÄúRemove all space from option text then match the text‚Äù">‚Äã</a></h4><p>This toggle removes all spaces (including internal spaces) from both the input value and the dropdown option text before matching.</p><ul><li><strong>Enabled</strong>: Removes all spaces. For example, &quot;Option One&quot; will match &quot;OptionOne&quot;.</li><li><strong>Disabled</strong>: Spaces within the text are preserved during matching. (Default and generally recommended unless specific matching requires removing all spaces)</li></ul><h2 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to ‚ÄúExample Usage‚Äù">‚Äã</a></h2><p>Imagine you have a multiple-select dropdown for &quot;Skills&quot; and your Excel column <code>Skills</code> contains <code>&quot;JavaScript&quot; &quot;Python&quot; &quot;CSS&quot;</code>.</p><ol><li><strong>Field Type</strong>: <code>Multiple Select</code></li><li><strong>Field Selector Query</strong>: <code>select[name=&quot;skills&quot;]</code></li><li><strong>Field Value</strong>: <code>JavaScript,CSS</code></li><li><strong>Separator to Split Value</strong>: <code>,</code></li><li><strong>Convert to lowercase</strong>: <code>ON</code></li><li><strong>Remove extra space</strong>: <code>ON</code></li></ol><p>The extension will:</p><ul><li>Read <code>&quot;JavaScript,CSS&quot;</code> from Excel.</li><li>Split it into <code>JavaScript</code>, <code>CSS</code>.</li><li>Convert these to lowercase (<code>javascript</code>, <code>css</code>).</li><li>Trim any extra spaces.</li><li>Then, it will find and select the corresponding options in the dropdown, matching them case-insensitively and ignoring extra spaces.</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to ‚ÄúTroubleshooting‚Äù">‚Äã</a></h2><h3 id="multiple-select-field-not-working" tabindex="-1">Multiple Select Field Not Working <a class="header-anchor" href="#multiple-select-field-not-working" aria-label="Permalink to ‚ÄúMultiple Select Field Not Working‚Äù">‚Äã</a></h3><ul><li>Check the field selector query</li><li>Check the field value</li><li>Check the separator to split value</li><li>Check the convert to lowercase</li><li>Check the remove extra space</li><li>Check the remove all space</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to ‚ÄúNext Steps‚Äù">‚Äã</a></h2><ul><li><a href="/documentation/form-fields/field-types.html">Field Types</a> - Learn about different field types</li><li><a href="/documentation/form-fields/field-response-action.html">Field Response Actions</a> - Configure response behaviors</li><li><a href="/documentation/variable.html">Variables</a> - Use variables in field settings</li><li><a href="/documentation/site/site-settings.html">Site Settings</a> - Configure site-wide settings</li></ul>',39)])])}const m=t(l,[["render",n]]);export{u as __pageData,m as default};
