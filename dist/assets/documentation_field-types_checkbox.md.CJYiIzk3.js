import{_ as t,c as a,o as i,ah as n,aj as o}from"./chunks/framework.0CRElgwM.js";const b=JSON.parse('{"title":"Checkbox Field","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/field-types/checkbox.md","filePath":"documentation/field-types/checkbox.md","lastUpdated":1760012816000}'),s={name:"documentation/field-types/checkbox.md"};function l(c,e,r,h,d,u){return i(),a("div",null,[...e[0]||(e[0]=[n('<h1 id="checkbox-field" tabindex="-1">Checkbox Field <a class="header-anchor" href="#checkbox-field" aria-label="Permalink to “Checkbox Field”">​</a></h1><p>Checkbox fields are used for multiple-selection options in web forms, where users can choose one or more options from a group of independent choices. They provide various configuration options for optimal checkbox interaction behavior.</p><img src="'+o+`" alt="checkbox" height="200" width="200"><h2 id="basic-configuration" tabindex="-1">Basic Configuration <a class="header-anchor" href="#basic-configuration" aria-label="Permalink to “Basic Configuration”">​</a></h2><h3 id="field-properties" tabindex="-1">Field Properties <a class="header-anchor" href="#field-properties" aria-label="Permalink to “Field Properties”">​</a></h3><table tabindex="0"><thead><tr><th>Property</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><strong>Field Name</strong></td><td>Unique identifier for the field</td><td><code>newsletter</code>, <code>interests</code>, <code>terms</code></td></tr><tr><td><strong>Field Type</strong></td><td>Set to <strong>Checkbox</strong> for checkbox elements</td><td><code>Checkbox</code></td></tr><tr><td><strong>Field Selector Type</strong></td><td>Method to locate the field element</td><td><code>Selector</code>, <code>Id</code>, <code>XPath</code></td></tr><tr><td><strong>Field Selector Query</strong></td><td>Unique address to locate the field</td><td><code>input[name=&quot;newsletter&quot;]</code>, <code>#terms</code></td></tr><tr><td><strong>Field Value</strong></td><td>Data source for checkbox state</td><td>Excel column or default value</td></tr></tbody></table><h2 id="checkbox-field-settings" tabindex="-1">Checkbox Field Settings <a class="header-anchor" href="#checkbox-field-settings" aria-label="Permalink to “Checkbox Field Settings”">​</a></h2><h3 id="☑️-checkbox-state-behavior" tabindex="-1">☑️ Checkbox State Behavior <a class="header-anchor" href="#☑️-checkbox-state-behavior" aria-label="Permalink to “☑️ Checkbox State Behavior”">​</a></h3><p>Configure how checkboxes are checked/unchecked based on Excel data values.</p><p><strong>Core Behavior:</strong></p><ul><li><strong>Excel Value Priority</strong> - Checkbox state depends on Excel column value</li><li><strong>Checked State</strong> - Checkbox is checked when Excel value is not empty</li><li><strong>Unchecked State</strong> - Checkbox is unchecked when Excel value is &quot;unchecked&quot;</li></ul><p><strong>Configuration:</strong></p><ul><li><strong>Toggle Switch</strong>: Enable/disable checkbox state control</li><li><strong>Excel Value Check</strong>: System checks Excel column for state values</li><li><strong>State Action</strong>: Checkbox state changes based on Excel value</li></ul><p><strong>Example Scenarios:</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Excel Column Value: &quot;checked&quot; → Checkbox gets checked</span></span>
<span class="line"><span>Excel Column Value: &quot;unchecked&quot; → Checkbox gets unchecked</span></span>
<span class="line"><span>Excel Column Value: &quot;&quot; (empty) → Checkbox remains unchecked</span></span>
<span class="line"><span>Excel Column Value: &quot;yes&quot; → Checkbox gets checked</span></span>
<span class="line"><span>Excel Column Value: &quot;no&quot; → Checkbox gets unchecked</span></span></code></pre></div><hr><h3 id="element-detection-settings" tabindex="-1">⏳ Element Detection Settings <a class="header-anchor" href="#element-detection-settings" aria-label="Permalink to “⏳ Element Detection Settings”">​</a></h3><p>Configure how the extension waits for and interacts with checkbox elements.</p><h4 id="wait-until-element-is-found-in-the-page" tabindex="-1">Wait until element is found in the page <a class="header-anchor" href="#wait-until-element-is-found-in-the-page" aria-label="Permalink to “Wait until element is found in the page”">​</a></h4><ul><li><strong>Purpose</strong>: Ensures checkbox exists in DOM before interaction</li><li><strong>Use Case</strong>: Dynamic content, AJAX-loaded checkboxes</li><li><strong>Configuration</strong>: Toggle ON/OFF</li></ul><h4 id="wait-until-element-is-visible-in-the-page" tabindex="-1">Wait until element is visible in the page <a class="header-anchor" href="#wait-until-element-is-visible-in-the-page" aria-label="Permalink to “Wait until element is visible in the page”">​</a></h4><ul><li><strong>Purpose</strong>: Ensures checkbox is both found and visible</li><li><strong>Use Case</strong>: Hidden checkboxes, CSS visibility controls</li><li><strong>Configuration</strong>: Toggle ON/OFF</li></ul><h3 id="javascript-event-triggering" tabindex="-1">⚡ Trigger Javascript Event <a class="header-anchor" href="#javascript-event-triggering" aria-label="Permalink to “⚡ Trigger Javascript Event”">​</a></h3><p>Configure JavaScript events to be triggered on the checkbox element.</p><p><strong>Supported Events:</strong></p><ul><li><strong>change</strong> - Triggers when checkbox state changes</li><li><strong>click</strong> - Triggers when checkbox is clicked</li><li><strong>focus</strong> - Triggers when checkbox receives focus</li><li><strong>blur</strong> - Triggers when checkbox loses focus</li><li><strong>input</strong> - Triggers on checkbox interaction</li></ul><h2 id="checkbox-state-handling" tabindex="-1">Checkbox State Handling <a class="header-anchor" href="#checkbox-state-handling" aria-label="Permalink to “Checkbox State Handling”">​</a></h2><h3 id="checked-values" tabindex="-1">Checked Values <a class="header-anchor" href="#checked-values" aria-label="Permalink to “Checked Values”">​</a></h3><ul><li><strong>&quot;checked&quot;</strong> - Checkbox gets checked</li><li><strong>&quot;yes&quot;</strong> - Checkbox gets checked</li><li><strong>&quot;no&quot;</strong> - Checkbox gets checked</li><li><strong>&quot;true&quot;</strong> - Checkbox gets checked</li><li><strong>&quot;1&quot;</strong> - Checkbox gets checked</li><li><strong>Any non-empty value</strong> - Checkbox gets checked</li></ul><h3 id="unchecked-values" tabindex="-1">Unchecked Values <a class="header-anchor" href="#unchecked-values" aria-label="Permalink to “Unchecked Values”">​</a></h3><ul><li><strong>&quot;unchecked&quot;</strong> - Checkbox gets unchecked</li><li><strong>&quot;&quot; (empty)</strong> - Checkbox remains unchecked</li></ul><h2 id="excel-value-configuration" tabindex="-1">Excel Value Configuration <a class="header-anchor" href="#excel-value-configuration" aria-label="Permalink to “Excel Value Configuration”">​</a></h2><h3 id="text-values" tabindex="-1">Text Values <a class="header-anchor" href="#text-values" aria-label="Permalink to “Text Values”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Excel Column Value: &quot;yes&quot; → Checkbox checked</span></span>
<span class="line"><span>Excel Column Value: &quot;no&quot; → Checkbox checked</span></span>
<span class="line"><span>Excel Column Value: &quot;checked&quot; → Checkbox checked</span></span>
<span class="line"><span>Excel Column Value: &quot;unchecked&quot; → Checkbox unchecked</span></span>
<span class="line"><span>Excel Column Value: &quot;&quot; → Checkbox unchecked</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to “Troubleshooting”">​</a></h2><h3 id="checkbox-not-changing-state" tabindex="-1">Checkbox Not Changing State <a class="header-anchor" href="#checkbox-not-changing-state" aria-label="Permalink to “Checkbox Not Changing State”">​</a></h3><ul><li>Check selector accuracy</li><li>Verify element visibility</li><li>Test with different selectors</li><li>Check Excel value format</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to “Next Steps”">​</a></h2><ul><li><a href="/documentation/form-fields/field-types.html">Field Types</a> - Learn about different field types</li><li><a href="/documentation/form-fields/field-response-action.html">Field Response Actions</a> - Configure response behaviors</li><li><a href="/documentation/variable.html">Variables</a> - Use variables in field settings</li><li><a href="/documentation/site/site-settings.html">Site Settings</a> - Configure site-wide settings</li></ul>`,39)])])}const k=t(s,[["render",l]]);export{b as __pageData,k as default};
