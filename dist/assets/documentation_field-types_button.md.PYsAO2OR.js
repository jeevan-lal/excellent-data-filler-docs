import{_ as e,c as i,o as n,ah as o}from"./chunks/framework.0CRElgwM.js";const h=JSON.parse('{"title":"Button Field","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/field-types/button.md","filePath":"documentation/field-types/button.md","lastUpdated":1760012557000}'),a={name:"documentation/field-types/button.md"};function l(s,t,r,c,u,d){return n(),i("div",null,[...t[0]||(t[0]=[o(`<h1 id="button-field" tabindex="-1">Button Field <a class="header-anchor" href="#button-field" aria-label="Permalink to ‚ÄúButton Field‚Äù">‚Äã</a></h1><p>Button fields are used to interact with clickable elements on web pages, such as submit buttons, navigation buttons, or any clickable interface elements. They provide various configuration options for optimal button interaction behavior.</p><h2 id="basic-configuration" tabindex="-1">Basic Configuration <a class="header-anchor" href="#basic-configuration" aria-label="Permalink to ‚ÄúBasic Configuration‚Äù">‚Äã</a></h2><h3 id="field-properties" tabindex="-1">Field Properties <a class="header-anchor" href="#field-properties" aria-label="Permalink to ‚ÄúField Properties‚Äù">‚Äã</a></h3><table tabindex="0"><thead><tr><th>Property</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><strong>Field Name</strong></td><td>Unique identifier for the field</td><td><code>submitButton</code>, <code>nextButton</code>, <code>save</code></td></tr><tr><td><strong>Field Type</strong></td><td>Set to <strong>Button</strong> for clickable elements</td><td><code>Button</code></td></tr><tr><td><strong>Field Selector Type</strong></td><td>Method to locate the field element</td><td><code>Selector</code>, <code>Id</code>, <code>XPath</code></td></tr><tr><td><strong>Field Selector Query</strong></td><td>Unique address to locate the field</td><td><code>#submit</code>, <code>button[type=&quot;submit&quot;]</code></td></tr><tr><td><strong>Field Value</strong></td><td>Data source for button interaction</td><td>Excel column or default value</td></tr></tbody></table><h2 id="button-field-settings" tabindex="-1">Button Field Settings <a class="header-anchor" href="#button-field-settings" aria-label="Permalink to ‚ÄúButton Field Settings‚Äù">‚Äã</a></h2><h3 id="button-click-behavior" tabindex="-1">üñ±Ô∏è Button Click Behavior <a class="header-anchor" href="#button-click-behavior" aria-label="Permalink to ‚Äúüñ±Ô∏è Button Click Behavior‚Äù">‚Äã</a></h3><p>Configure how the button interacts based on Excel data values.</p><p><strong>Core Behavior:</strong></p><ul><li><strong>Excel Value Priority</strong> - Button behavior depends on Excel column value</li><li><strong>Conditional Clicking</strong> - Button only clicks when Excel value is not &quot;not-click&quot;</li><li><strong>Skip Behavior</strong> - Button is skipped when Excel value is &quot;not-click&quot;</li></ul><p><strong>Configuration:</strong></p><ul><li><strong>Toggle Switch</strong>: Enable/disable conditional button clicking</li><li><strong>Excel Value Check</strong>: System checks Excel column for &quot;not-click&quot; value</li><li><strong>Click Action</strong>: Button clicks only when Excel value is not &quot;not-click&quot;</li></ul><p><strong>Example Scenarios:</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Excel Column Value: &quot;click&quot; ‚Üí Button gets clicked</span></span>
<span class="line"><span>Excel Column Value: &quot;not-click&quot; ‚Üí Button is skipped</span></span>
<span class="line"><span>Excel Column Value: &quot;&quot; (empty) ‚Üí Button gets clicked</span></span>
<span class="line"><span>Excel Column Value: &quot;submit&quot; ‚Üí Button gets clicked</span></span></code></pre></div><hr><h3 id="element-detection-settings" tabindex="-1">‚è≥ Element Detection Settings <a class="header-anchor" href="#element-detection-settings" aria-label="Permalink to ‚Äú‚è≥ Element Detection Settings‚Äù">‚Äã</a></h3><p>Configure how the extension waits for and interacts with button elements.</p><h4 id="wait-until-element-is-found-in-the-page" tabindex="-1">Wait until element is found in the page <a class="header-anchor" href="#wait-until-element-is-found-in-the-page" aria-label="Permalink to ‚ÄúWait until element is found in the page‚Äù">‚Äã</a></h4><ul><li><strong>Purpose</strong>: Ensures button exists in DOM before interaction</li><li><strong>Use Case</strong>: Dynamic content, AJAX-loaded buttons</li><li><strong>Configuration</strong>: Toggle ON/OFF</li></ul><h4 id="wait-until-element-is-visible-in-the-page" tabindex="-1">Wait until element is visible in the page <a class="header-anchor" href="#wait-until-element-is-visible-in-the-page" aria-label="Permalink to ‚ÄúWait until element is visible in the page‚Äù">‚Äã</a></h4><ul><li><strong>Purpose</strong>: Ensures button is both found and visible</li><li><strong>Use Case</strong>: Hidden buttons, CSS visibility controls</li><li><strong>Configuration</strong>: Toggle ON/OFF</li></ul><h3 id="javascript-event-triggering" tabindex="-1">‚ö° Trigger Javascript Event <a class="header-anchor" href="#javascript-event-triggering" aria-label="Permalink to ‚Äú‚ö° Trigger Javascript Event‚Äù">‚Äã</a></h3><p>Configure JavaScript events to be triggered on the button element.</p><p><strong>Supported Events:</strong></p><ul><li><strong>click</strong> - Triggers when button is clicked</li><li><strong>focus</strong> - Triggers when button receives focus</li><li><strong>blur</strong> - Triggers when button loses focus</li><li><strong>mousedown</strong> - Triggers on mouse press</li><li><strong>mouseup</strong> - Triggers on mouse release</li><li><strong>mouseover</strong> - Triggers when mouse hovers over button</li></ul><p><strong>Configuration:</strong></p><ul><li><strong>Toggle Switch</strong>: Enable JavaScript event triggering</li><li><strong>Event Selection</strong>: Choose specific events to trigger</li><li><strong>Multiple Events</strong>: Can select multiple events simultaneously</li></ul><h2 id="button-interaction-types" tabindex="-1">Button Interaction Types <a class="header-anchor" href="#button-interaction-types" aria-label="Permalink to ‚ÄúButton Interaction Types‚Äù">‚Äã</a></h2><h3 id="standard-click" tabindex="-1">Standard Click <a class="header-anchor" href="#standard-click" aria-label="Permalink to ‚ÄúStandard Click‚Äù">‚Äã</a></h3><ul><li><strong>Behavior</strong>: Single click action</li><li><strong>Use Case</strong>: Submit buttons, navigation buttons</li><li><strong>Configuration</strong>: Default button behavior</li></ul><h3 id="skip-button" tabindex="-1">Skip Button <a class="header-anchor" href="#skip-button" aria-label="Permalink to ‚ÄúSkip Button‚Äù">‚Äã</a></h3><ul><li><strong>Behavior</strong>: Button is ignored when Excel value is &quot;not-click&quot;</li><li><strong>Use Case</strong>: Optional form steps, conditional workflows</li><li><strong>Configuration</strong>: Excel value &quot;not-click&quot; skips button</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to ‚ÄúTroubleshooting‚Äù">‚Äã</a></h2><h3 id="button-not-clicking" tabindex="-1">Button Not Clicking <a class="header-anchor" href="#button-not-clicking" aria-label="Permalink to ‚ÄúButton Not Clicking‚Äù">‚Äã</a></h3><ul><li>Check selector accuracy</li><li>Verify element visibility</li><li>Test with different selectors</li><li>Check Excel value format</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to ‚ÄúNext Steps‚Äù">‚Äã</a></h2><ul><li><a href="/documentation/form-fields/field-types.html">Field Types</a> - Learn about different field types</li><li><a href="/documentation/form-fields/field-response-action.html">Field Response Actions</a> - Configure response behaviors</li><li><a href="/documentation/variable.html">Variables</a> - Use variables in field settings</li><li><a href="/documentation/site/site-settings.html">Site Settings</a> - Configure site-wide settings</li></ul>`,37)])])}const p=e(a,[["render",l]]);export{h as __pageData,p as default};
